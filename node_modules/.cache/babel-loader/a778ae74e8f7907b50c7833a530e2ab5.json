{"ast":null,"code":"var _jsxFileName = \"/Users/bimals/Desktop/module-7/m7-d4/src/components/MainSearch.jsx\";\nimport React from 'react';\nimport { Container, Row, Col, Form, Alert, Spinner } from 'react-bootstrap';\nimport JobResult from './JobResult';\nimport uniqid from 'uniqid';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getJobAction } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  jobs: state.company.companyName,\n  isError: state.company.isError,\n  isLoading: state.company.isLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getJobs: () => {\n    dispatch(getJobAction());\n  }\n});\n\nclass MainSearch extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: '',\n      jobs: []\n    };\n    this.baseEndpoint = 'https://strive-jobs-api.herokuapp.com/jobs?search=';\n\n    this.handleChange = e => {\n      this.setState({\n        query: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const response = await fetch(this.baseEndpoint + this.state.query + '&limit=20');\n\n      if (!response.ok) {\n        alert('Error fetching results');\n        return;\n      }\n\n      const {\n        data\n      } = await response.json();\n      this.setState({\n        jobs: data\n      });\n    };\n  }\n\n  render() {\n    return this.props.isError ? /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Error fetching books in stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this) : this.props.isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      variant: \"success\",\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          className: \"mx-auto my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Remote Jobs Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/favourites\",\n            className: \"btn btn-primary\",\n            children: \"Favourites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          className: \"mx-auto\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: this.handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"search\",\n              value: this.state.query,\n              onChange: this.handleChange,\n              placeholder: \"type and press Enter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 10,\n          className: \"mx-auto mb-5\",\n          children: this.state.jobs.map(jobData => /*#__PURE__*/_jsxDEV(JobResult, {\n            data: jobData\n          }, uniqid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 60\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSearch);","map":{"version":3,"sources":["/Users/bimals/Desktop/module-7/m7-d4/src/components/MainSearch.jsx"],"names":["React","Container","Row","Col","Form","Alert","Spinner","JobResult","uniqid","Link","connect","getJobAction","mapStateToProps","state","jobs","company","companyName","isError","isLoading","mapDispatchToProps","dispatch","getJobs","MainSearch","Component","query","baseEndpoint","handleChange","e","setState","target","value","handleSubmit","preventDefault","response","fetch","ok","alert","data","json","render","props","map","jobData"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Container, Row, Col, Form, Alert, Spinner} from 'react-bootstrap'\nimport JobResult from './JobResult'\nimport uniqid from 'uniqid'\nimport { Link } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\n\nimport { getJobAction } from \"../actions\";\n\nconst mapStateToProps = (state) => ({\n  jobs: state.company.companyName,\n  isError: state.company.isError,\n  isLoading: state.company.isLoading\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  getJobs: () => {\n    dispatch(getJobAction())\n  }\n})\n\n class MainSearch extends React.Component {\n\n    state = {\n        query: '',\n        jobs: []\n    }\n\n    baseEndpoint = 'https://strive-jobs-api.herokuapp.com/jobs?search='\n\n\n    handleChange = (e) => {\n        this.setState({ query: e.target.value })\n    }\n\n    handleSubmit = async (e) => {\n        e.preventDefault()\n\n        const response = await fetch(this.baseEndpoint + this.state.query + '&limit=20')\n\n        if (!response.ok) {\n            alert('Error fetching results')\n            return\n        }\n\n        const { data } = await response.json()\n\n        this.setState({ jobs: data })\n\n    }\n\n    render() {\n        return  this.props.isError ?(\n            <Alert variant=\"danger\">Error fetching books in stock</Alert>\n            ) : this.props.isLoading ? (\n                <Spinner variant=\"success\" animation=\"border\" />\n              ) : (\n            <Container>\n                <Row>\n                    <Col xs={10} className='mx-auto my-3'>\n                        <h1>Remote Jobs Search</h1>\n                        <Link to=\"/favourites\" className=\"btn btn-primary\">Favourites</Link>\n                    </Col>\n                    <Col xs={10} className='mx-auto'>\n                        <Form onSubmit={this.handleSubmit}>\n                            <Form.Control type=\"search\" value={this.state.query} onChange={this.handleChange} placeholder=\"type and press Enter\" />\n                        </Form>\n                    </Col>\n                    <Col xs={10} className='mx-auto mb-5'>\n                        {\n                            this.state.jobs.map(jobData => <JobResult key={uniqid()} data={jobData} />)\n                        }\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSearch)"]},"metadata":{},"sourceType":"module"}