{"ast":null,"code":"export const GET_COMPANY = 'GET_COMPANY';\nexport const GET_COMPANY_ERROR = 'GET_COMPANY_ERROR';\nexport const GET_COMPANY_LOADING = 'GET_COMPANY_LOADING';\nexport const addToFav = company => ({\n  type: 'ADD_TO_FAV',\n  payload: company\n});\nexport const removeFromFav = company => ({\n  type: 'REMOVE_FROM_FAV',\n  payload: company\n});\nexport const getJobAction = () => {\n  return async (dispatch, getState) => {\n    console.log('...fetching the company name');\n    dispatch({\n      type: GET_COMPANY_LOADING,\n      payload: true\n    });\n\n    try {\n      let resp = await fetch('https://strive-jobs-api.herokuapp.com/jobs?company=' + this.props.match.params.companyName);\n\n      if (resp.ok) {\n        let jobs = await resp.json();\n        dispatch({\n          type: GET_COMPANY,\n          payload: jobs\n        });\n        dispatch({\n          type: GET_COMPANY_ERROR,\n          payload: false\n        });\n        dispatch({\n          type: GET_COMPANY_LOADING,\n          payload: false\n        });\n      } else {\n        console.log('error');\n        dispatch({\n          type: GET_COMPANY_ERROR,\n          payload: true\n        });\n        dispatch({\n          type: GET_COMPANY_LOADING,\n          payload: false\n        });\n      }\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: GET_COMPANY_ERROR,\n        payload: true\n      });\n      dispatch({\n        type: GET_COMPANY_LOADING,\n        payload: false\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Users/bimals/Desktop/module-7/m7-d4/src/actions/index.js"],"names":["GET_COMPANY","GET_COMPANY_ERROR","GET_COMPANY_LOADING","addToFav","company","type","payload","removeFromFav","getJobAction","dispatch","getState","console","log","resp","fetch","props","match","params","companyName","ok","jobs","json","error"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAGP,OAAO,MAAMC,QAAQ,GAAIC,OAAD,KAAc;AAClCC,EAAAA,IAAI,EAAE,YAD4B;AAElCC,EAAAA,OAAO,EAAEF;AAFyB,CAAd,CAAjB;AAKP,OAAO,MAAMG,aAAa,GAAIH,OAAD,KAAc;AACvCC,EAAAA,IAAI,EAAE,iBADiC;AAEvCC,EAAAA,OAAO,EAAEF;AAF8B,CAAd,CAAtB;AAMP,OAAO,MAAMI,YAAY,GAAG,MAAM;AAC9B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAH,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAEH,mBADC;AAEPI,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;;AAIA,QAAI;AACF,UAAIO,IAAI,GAAG,MAAMC,KAAK,CAAC,wDAAwD,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,WAAjF,CAAtB;;AACA,UAAIL,IAAI,CAACM,EAAT,EAAa;AACX,YAAIC,IAAI,GAAG,MAAMP,IAAI,CAACQ,IAAL,EAAjB;AAEAZ,QAAAA,QAAQ,CAAC;AACPJ,UAAAA,IAAI,EAAEL,WADC;AAEPM,UAAAA,OAAO,EAAEc;AAFF,SAAD,CAAR;AAIAX,QAAAA,QAAQ,CAAC;AACPJ,UAAAA,IAAI,EAAEJ,iBADC;AAEPK,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAIAG,QAAAA,QAAQ,CAAC;AACPJ,UAAAA,IAAI,EAAEH,mBADC;AAEPI,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID,OAfD,MAeO;AACLK,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAH,QAAAA,QAAQ,CAAC;AACPJ,UAAAA,IAAI,EAAEJ,iBADC;AAEPK,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAIAG,QAAAA,QAAQ,CAAC;AACPJ,UAAAA,IAAI,EAAEH,mBADC;AAEPI,UAAAA,OAAO,EAAE;AAFF,SAAD,CAAR;AAID;AACF,KA5BD,CA4BE,OAAOgB,KAAP,EAAc;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACAb,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAEJ,iBADC;AAEPK,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIAG,MAAAA,QAAQ,CAAC;AACPJ,QAAAA,IAAI,EAAEH,mBADC;AAEPI,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAID;AACF,GA7CD;AA8CD,CA/CI","sourcesContent":["export const GET_COMPANY = 'GET_COMPANY'\nexport const GET_COMPANY_ERROR = 'GET_COMPANY_ERROR'\nexport const GET_COMPANY_LOADING = 'GET_COMPANY_LOADING'\n\n\nexport const addToFav = (company) => ({\n    type: 'ADD_TO_FAV',\n    payload: company\n})\n\nexport const removeFromFav = (company) => ({\n    type: 'REMOVE_FROM_FAV',\n    payload: company\n})\n\n\nexport const getJobAction = () => {\n    return async (dispatch, getState) => {\n      console.log('...fetching the company name')\n      dispatch({\n        type: GET_COMPANY_LOADING,\n        payload: true,\n      })\n      try {\n        let resp = await fetch('https://strive-jobs-api.herokuapp.com/jobs?company=' + this.props.match.params.companyName)\n        if (resp.ok) {\n          let jobs = await resp.json()\n         \n          dispatch({\n            type: GET_COMPANY,\n            payload: jobs,\n          })\n          dispatch({\n            type: GET_COMPANY_ERROR,\n            payload: false,\n          })\n          dispatch({\n            type: GET_COMPANY_LOADING,\n            payload: false,\n          })\n        } else {\n          console.log('error')\n          dispatch({\n            type: GET_COMPANY_ERROR,\n            payload: true,\n          })\n          dispatch({\n            type: GET_COMPANY_LOADING,\n            payload: false,\n          })\n        }\n      } catch (error) {\n        console.log(error)\n        dispatch({\n          type: GET_COMPANY_ERROR,\n          payload: true,\n        })\n        dispatch({\n          type: GET_COMPANY_LOADING,\n          payload: false,\n        })\n      }\n    }\n  }\n"]},"metadata":{},"sourceType":"module"}