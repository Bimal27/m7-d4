{"ast":null,"code":"var _jsxFileName = \"/Users/bimals/Desktop/module-7/m7-d4/src/components/CompanySearchResults.jsx\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Job from './Job';\nimport uniqid from 'uniqid';\nimport { getCompanyAction } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => ({\n  jobs: state.company.companyName,\n  isError: state.company.isError,\n  isLoading: state.company.isLoading\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getJobs: () => {\n    dispatch(getCompanyAction());\n  }\n});\n\nclass CompanySearchResults extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.baseEndpoint = 'https://strive-jobs-api.herokuapp.com/jobs?company=';\n\n    this.getJobs = async () => {\n      const response = await fetch(this.baseEndpoint + this.props.match.params.companyName);\n      const {\n        data\n      } = await response.json();\n      this.setState({\n        jobs: data\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getJobs();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: this.state.jobs.map(jobData => /*#__PURE__*/_jsxDEV(Job, {\n            data: jobData\n          }, uniqid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 56\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanySearchResults);","map":{"version":3,"sources":["/Users/bimals/Desktop/module-7/m7-d4/src/components/CompanySearchResults.jsx"],"names":["React","Container","Row","Col","Job","uniqid","getCompanyAction","mapStateToProps","state","jobs","company","companyName","isError","isLoading","mapDispatchToProps","dispatch","getJobs","CompanySearchResults","Component","baseEndpoint","response","fetch","props","match","params","data","json","setState","componentDidMount","render","map","jobData","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,gBAAT,QAAiC,YAAjC;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,IAAI,EAAED,KAAK,CAACE,OAAN,CAAcC,WADc;AAElCC,EAAAA,OAAO,EAAEJ,KAAK,CAACE,OAAN,CAAcE,OAFW;AAGlCC,EAAAA,SAAS,EAAEL,KAAK,CAACE,OAAN,CAAcG;AAHS,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCC,EAAAA,OAAO,EAAE,MAAM;AACbD,IAAAA,QAAQ,CAACT,gBAAgB,EAAjB,CAAR;AACD;AAHuC,CAAf,CAA3B;;AAMC,MAAMW,oBAAN,SAAmCjB,KAAK,CAACkB,SAAzC,CAAmD;AAAA;AAAA;AAAA,SAMhDC,YANgD,GAMjC,qDANiC;;AAAA,SAQhDH,OARgD,GAQtC,YAAY;AAClB,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,KAAKF,YAAL,GAAoB,KAAKG,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBb,WAA7C,CAA5B;AACA,YAAM;AAAEc,QAAAA;AAAF,UAAW,MAAML,QAAQ,CAACM,IAAT,EAAvB;AAEA,WAAKC,QAAL,CAAc;AAAElB,QAAAA,IAAI,EAAEgB;AAAR,OAAd;AACH,KAb+C;AAAA;;AAEhDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,KAAL,CAAWN,OAAX;AACH;;AAWDa,EAAAA,MAAM,GAAG;AACL,wBAAO,QAAC,SAAD;AAAA,6BACH,QAAC,GAAD;AAAA,+BACI,QAAC,GAAD;AAAA,oBAEQ,KAAKrB,KAAL,CAAWC,IAAX,CAAgBqB,GAAhB,CAAoBC,OAAO,iBAAI,QAAC,GAAD;AAAoB,YAAA,IAAI,EAAEA;AAA1B,aAAU1B,MAAM,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAA/B;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YAAP;AASH;;AAzB+C;;AA2BpD,eAAe2B,OAAO,CAACzB,eAAD,EAAkBO,kBAAlB,CAAP,CAA6CG,oBAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Job from './Job'\nimport uniqid from 'uniqid'\n\nimport { getCompanyAction } from \"../actions\";\n\nconst mapStateToProps = (state) => ({\n  jobs: state.company.companyName,\n  isError: state.company.isError,\n  isLoading: state.company.isLoading\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  getJobs: () => {\n    dispatch(getCompanyAction())\n  }\n})\n\n class CompanySearchResults extends React.Component {\n\n    componentDidMount() {\n        this.props.getJobs()\n    }\n\n    baseEndpoint = 'https://strive-jobs-api.herokuapp.com/jobs?company='\n\n    getJobs = async () => {\n        const response = await fetch(this.baseEndpoint + this.props.match.params.companyName)\n        const { data } = await response.json()\n\n        this.setState({ jobs: data })\n    }\n\n    render() {\n        return <Container>\n            <Row>\n                <Col>\n                    {\n                        this.state.jobs.map(jobData => <Job key={uniqid()} data={jobData} />)\n                    }\n                </Col>\n            </Row>\n        </Container>\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CompanySearchResults)"]},"metadata":{},"sourceType":"module"}